/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <amxmisc>
#include <fakemeta>
#include <fakemeta_util>
#include <engine>
#include <hamsandwich>
#include <xs>
#include <fun>
#include <cstrike>
#define pragma compress 1
#define PLUGIN "ZFILE_Weapons"
#define VERSION "1.0" 
#define AUTHOR "Mellowzy"

#define CSW_BGHAMMER CSW_KNIFE
#define weapon_bghammer "weapon_knife"

#define weapon_bgknife "weapon_knife"
#define CSW_BGKNIFE CSW_KNIFE

new const g_bghammerclassname[] = "hammer_survival";
new const g_bgknifeclassname[] = "knife_survival";
new const g_bgp90classname[] = "p90ext";
new const g_uspclassname[] = "usp45";
new const g_info[] = "info_weaponss";
new const g_m3classname[] = "m3surv"
new const g_xm1014classname[] = "xm1014shot"

new const knife_models[][] = {
	"models/zfile_weapon/v_1pve_knife.mdl",
	"models/zfile_weapon/w_1pve_knife.mdl"
}
new const hammer_model[][] = {
	"models/zfile_weapon/v_zsh_clawhammer.mdl",
	"models/zfile_weapon/w_zsh_clawhammer.mdl"
}
new get_hammer[33], bool:touched_hammer[256]
new get_knife[33], bool:touched_knife[256]
new get_p90ext[33], bool:touched_p90[256]
new get_usp[33], bool:touched_usp[256]
new get_m3[33], bool:touched_m3[256]
new get_xm1014[33], bool:touched_xm1014[256]

public plugin_init() {
	register_plugin(PLUGIN, VERSION, AUTHOR)
	register_logevent("Event_RoundStart", 2, "1=Round_Start")
	register_event("CurWeapon", "Event_CurWeapon_Knife", "be", "1=1")
	RegisterHam(Ham_Spawn, "player", "SpawnPost", 1)
	
	register_touch(g_bghammerclassname, "player", "player_touch_that_hammer")
	register_touch(g_bgknifeclassname, "player", "player_touch_that_knife")
	register_touch(g_bgp90classname, "player", "player_touch_that_p90")
	register_touch(g_uspclassname, "player", "player_touch_that_usp")
	register_touch(g_xm1014classname, "player", "player_touch_that_xm1014")
	register_touch(g_m3classname, "player", "player_touch_that_m3")
	
	register_think(g_bghammerclassname, "hammer_obj_think")
	register_think(g_bgknifeclassname, "knife_obj_think")
	register_think(g_bgp90classname, "p90_obj_think")
	register_think(g_uspclassname, "usp_obj_think")
	register_think(g_m3classname, "m3_obj_think")
	register_think(g_xm1014classname, "xm1014_obj_think")
	
	RegisterHam(Ham_TakeDamage, "player", "fw_bgknifedmg")
	
	RegisterHam(Ham_Item_Deploy, weapon_bghammer, "Weapon_Deploy", 1)
	RegisterHam(Ham_Weapon_WeaponIdle, weapon_bghammer, "Weapon_Idle", 1)
	
	RegisterHam(Ham_Item_Deploy, weapon_bgknife, "Weapon_Deploy11", 1)
	RegisterHam(Ham_Weapon_WeaponIdle, weapon_bgknife, "Weapon_Idle11", 1)
	
	register_clcmd("bgknife", "get_bghammer")
	register_clcmd("remove_pvehammer", "remove_hammer")
}
public plugin_precache()
{
	new i;
	for(i = 0; i <sizeof(knife_models); i++)
		precache_model(knife_models[i])
	for(i = 0; i <sizeof(hammer_model); i++)
		precache_model(hammer_model[i])
		
		
	precache_model("models/obj/bg_holo_light.mdl")
	
	#define MAP "standalone_alpha"
	static MapName[64]; get_mapname(MapName, sizeof(MapName))
	
	if(!equal(MapName, MAP))
	{
		set_fail_state("[ZFILE]: You must play in %s", MAP)
		return
	} else {
		server_cmd("mp_timelimit 9999")	
	}
}
public get_bghammer(id)
{
	if(!is_user_alive(id)) return
	
	get_hammer[id] = 1
	give_item(id, weapon_bghammer)
	server_cmd("remove_wpnunarmed")
	Set_WeaponAnim(id, 3)
	
	if (get_user_weapon(id) == CSW_BGHAMMER) Event_CurWeapon_Hammer(id)
	else engclient_cmd(id,weapon_bghammer)
}
public get_bgknife(id)
{
	if(!is_user_alive(id)) return
	
	get_knife[id] = 1
	give_item(id, weapon_bgknife)
	
	Set_WeaponAnim(id, 3)
	
	if (get_user_weapon(id) == CSW_BGKNIFE) Event_CurWeapon_Knife(id)
	else engclient_cmd(id,weapon_bgknife)
}

public fw_bgknifedmg(victim, inflictor, attacker, Float:Damage, dmgbits)
{
	if(!is_user_connected(attacker))
		return HAM_IGNORED
	if(get_user_weapon(attacker) != CSW_BGKNIFE || !get_knife[attacker])
		return HAM_IGNORED
	
	SetHamParamFloat(4, 120.0 * 2.0)
	
	return HAM_IGNORED
}
	
public remove_hammer(id) get_hammer[id] = 0
public get_p90(id)
{
	if(!is_user_alive(id)) return
	
	get_p90ext[id] = 1
	give_item(id, "weapon_p90")
	engclient_cmd(id,"weapon_p90")
	new Weapon = fm_get_user_weapon_entity(id, CSW_P90)
	if(!pev_valid(Weapon)) return
	
	set_pdata_int(Weapon, 51, 50, 4)
	cs_set_user_bpammo(id, CSW_P90, 100)
}
public get_m3sg(id)
{
	if(!is_user_alive(id)) return
	Stock_Drop_Slot(id, 1) 
	get_m3[id] = 1
	give_item(id, "weapon_m3")
	engclient_cmd(id,"weapon_m3")
	new Weapon = fm_get_user_weapon_entity(id, CSW_M3)
	if(!pev_valid(Weapon)) return
	
	set_pdata_int(Weapon, 51, 8, 4)
	cs_set_user_bpammo(id, CSW_M3, 32)
}
public get_xm1014sg(id)
{
	if(!is_user_alive(id)) return
	Stock_Drop_Slot(id, 1) 
	get_xm1014[id] = 1
	give_item(id, "weapon_xm1014")
	engclient_cmd(id,"weapon_xm1014")
	new Weapon = fm_get_user_weapon_entity(id, CSW_XM1014)
	if(!pev_valid(Weapon)) return
	
	set_pdata_int(Weapon, 51, 7, 4)
	cs_set_user_bpammo(id, CSW_XM1014, 32)
}
public get_usp45(id)
{
	if(!is_user_alive(id)) return
	
	get_usp[id] = 1
	give_item(id, "weapon_usp")
	engclient_cmd(id,"weapon_usp")
	new Weapon = fm_get_user_weapon_entity(id, CSW_USP)
	if(!pev_valid(Weapon)) return
	
	set_pdata_int(Weapon, 51, 12, 4)
	cs_set_user_bpammo(id, CSW_USP, 100)
}
public weapon_hook(id)
{
	engclient_cmd(id,weapon_bghammer)
	return PLUGIN_HANDLED
}
public SpawnPost(id)
{
	get_hammer[id] = 0
	get_knife[id] = 0
	get_p90ext[id] = 0
	get_usp[id] = 0
	get_m3[id] = 0
	get_xm1014[id] = 0
	touched_hammer[id] = false
	touched_xm1014[id] = false
	touched_m3[id] = false
	touched_knife[id] = false
	touched_p90[id] = false
	touched_usp[id] = false
	
}
public Event_RoundStart(id){
	create_entity_hammer(id)
	create_entity_p90(id)
	create_entity_usp45(id)
	create_entity_m3(id)
	create_entity_xm1014(id)
}
public Weapon_Idle(ent){
	if(pev_valid(ent) != 2)
		return
	static id; id = get_pdata_cbase(ent, 41, 4)
	if(get_pdata_cbase(id, 373) != ent)
		return
	if(!get_hammer[id])
		return
	
	if(get_pdata_float(ent, 48, 4) <= 0.1){
		Set_WeaponAnim(id, 0)
		set_pdata_float(ent, 48, 20.0, 4)
	}
}
public Weapon_Idle11(ent){
	if(pev_valid(ent) != 2)
		return
	static id; id = get_pdata_cbase(ent, 41, 4)
	if(get_pdata_cbase(id, 373) != ent)
		return
	if(!get_knife[id])
		return
	
	if(get_pdata_float(ent, 48, 4) <= 0.1){
		Set_WeaponAnim(id, 0)
		set_pdata_float(ent, 48, 20.0, 4)
	}
}
public Weapon_Deploy(ent){
	if(pev_valid(ent) != 2)
		return
	static id; id = get_pdata_cbase(ent, 41, 4)
	if(get_pdata_cbase(id, 373) != ent)
		return
	if(!get_hammer[id])
		return
	
	if(get_pdata_float(ent, 46, 4) <= 0.1){
		Set_WeaponAnim(id, 3)
		set_pdata_float(ent, 46, 2.5, 4)
		set_pdata_float(ent, 48, 2.5, 4)
	}
}
public Weapon_Deploy11(ent){
	if(pev_valid(ent) != 2)
		return
	static id; id = get_pdata_cbase(ent, 41, 4)
	if(get_pdata_cbase(id, 373) != ent)
		return
	if(!get_knife[id])
		return
	
	if(get_pdata_float(ent, 46, 4) <= 0.1){
		Set_WeaponAnim(id, 3)
		set_pdata_float(ent, 46, 2.5, 4)
		set_pdata_float(ent, 48, 2.5, 4)
	}
}
public Event_CurWeapon_Knife(id)
{
	if(!is_user_alive(id))
		return
	if(get_user_weapon(id) != CSW_BGKNIFE)
		return
	if(!get_knife[id])
		return
	
	set_pev(id, pev_viewmodel2, knife_models[0])

}
public Event_CurWeapon_Hammer(id)
{
	if(!is_user_alive(id))
		return
	if(get_user_weapon(id) != CSW_BGHAMMER)
		return
	if(!get_hammer[id])
		return
	
	set_pev(id, pev_viewmodel2, hammer_model[0])

}
public create_entity_hammer(id)
{
	static Float:Ori[3]
	new ent = create_entity("info_target")
	Ori[0] = 2278.0
	Ori[1] = 2901.0
	Ori[2] = -1924.0
	set_pev(ent, pev_origin, Ori)
	set_pev(ent, pev_classname, g_bghammerclassname)
	set_pev(ent, pev_owner, id)
	engfunc(EngFunc_SetSize, ent, Float:{-10.0,-10.0,0.0}, Float:{10.0,10.0,6.0})
	engfunc(EngFunc_SetModel, ent, hammer_model[1])
	set_pev(ent, pev_solid, SOLID_TRIGGER)
	set_pev(ent, pev_movetype, MOVETYPE_NONE)
	drop_to_floor(ent)
	touched_hammer[id] = false
	create_info_obj(id, Ori)
	
	set_pev(ent, pev_nextthink, get_gametime() + 0.01)
}
public create_entity_knife(id)
{
	static Float:Oris[3]
	new ent = create_entity("info_target")
	Oris[0] = 1636.0
	Oris[1] = 2563.0
	Oris[2] = -1916.0
	set_pev(ent, pev_origin, Oris)
	set_pev(ent, pev_classname, g_bgknifeclassname)
	set_pev(ent, pev_owner, id)
	engfunc(EngFunc_SetSize, ent, Float:{-10.0,-10.0,0.0}, Float:{10.0,10.0,6.0})
	engfunc(EngFunc_SetModel, ent, knife_models[1])
	set_pev(ent, pev_solid, SOLID_TRIGGER)
	set_pev(ent, pev_movetype, MOVETYPE_NONE)
	drop_to_floor(ent)
	touched_knife[id] = false
	create_info_obj(id, Oris)
	
	set_pev(ent, pev_nextthink, get_gametime() + 0.01)
}
public create_entity_p90(id)
{
	static Float:Ori22[3]
	new ent22 = create_entity("info_target")
	Ori22[0] = -287.0
	Ori22[1] = -989.0
	Ori22[2] = -1924.0
	set_pev(ent22, pev_origin, Ori22)
	set_pev(ent22, pev_classname, g_bgp90classname)
	set_pev(ent22, pev_owner, id)
	engfunc(EngFunc_SetSize, ent22, Float:{-10.0,-10.0,0.0}, Float:{10.0,10.0,6.0})
	engfunc(EngFunc_SetModel, ent22, "models/w_p90.mdl")
	set_pev(ent22, pev_solid, SOLID_TRIGGER)
	set_pev(ent22, pev_movetype, MOVETYPE_NONE)
	drop_to_floor(ent22)
	touched_p90[id] = false
	create_info_obj(id, Ori22)
	
	set_pev(ent22, pev_nextthink, get_gametime() + 0.01)
}
public create_entity_m3(id)
{
	static Float:Ori221[3]
	new ent221 = create_entity("info_target")
	Ori221[0] = -273.0
	Ori221[1] = -684.0
	Ori221[2] = -2165.0
	set_pev(ent221, pev_origin, Ori221)
	set_pev(ent221, pev_classname, g_m3classname)
	set_pev(ent221, pev_owner, id)
	engfunc(EngFunc_SetSize, ent221, Float:{-10.0,-10.0,0.0}, Float:{10.0,10.0,6.0})
	engfunc(EngFunc_SetModel, ent221, "models/w_m3.mdl")
	set_pev(ent221, pev_solid, SOLID_TRIGGER)
	set_pev(ent221, pev_movetype, MOVETYPE_NONE)
	drop_to_floor(ent221)
	touched_m3[id] = false
	
	set_pev(ent221, pev_nextthink, get_gametime() + 0.01)
}
public create_entity_xm1014(id)
{
	static Float:Ori226[3]
	new ent226 = create_entity("info_target")
	Ori226[0] = -268.0
	Ori226[1] = -698.0
	Ori226[2] = -2173.0
	set_pev(ent226, pev_origin, Ori226)
	set_pev(ent226, pev_classname, g_xm1014classname)
	set_pev(ent226, pev_owner, id)
	engfunc(EngFunc_SetSize, ent226, Float:{-10.0,-10.0,0.0}, Float:{10.0,10.0,6.0})
	engfunc(EngFunc_SetModel, ent226, "models/w_xm1014.mdl")
	set_pev(ent226, pev_solid, SOLID_TRIGGER)
	set_pev(ent226, pev_movetype, MOVETYPE_NONE)
	drop_to_floor(ent226)
	touched_xm1014[id] = false
	
	set_pev(ent226, pev_nextthink, get_gametime() + 0.01)
}
public create_entity_usp45(id)
{
	static Float:Ori225[3]
	new ent225 = create_entity("info_target")
	Ori225[0] = 1914.0
	Ori225[1] = 1033.0
	Ori225[2] = -1905.0
	set_pev(ent225, pev_origin, Ori225)
	set_pev(ent225, pev_classname, g_uspclassname)
	set_pev(ent225, pev_owner, id)
	engfunc(EngFunc_SetSize, ent225, Float:{-10.0,-10.0,0.0}, Float:{10.0,10.0,6.0})
	engfunc(EngFunc_SetModel, ent225, "models/w_usp.mdl")
	set_pev(ent225, pev_solid, SOLID_TRIGGER)
	set_pev(ent225, pev_movetype, MOVETYPE_NONE)
	drop_to_floor(ent225)
	touched_usp[id] = false
	create_info_obj(id, Ori225)
	set_pev(ent225, pev_nextthink, get_gametime() + 0.01)
}
public create_info_obj(id, Float:objori[3])
{
	new ent = create_entity("info_target")
	set_pev(ent, pev_origin, objori)
	set_pev(ent, pev_classname, g_info)
	set_pev(ent, pev_owner, id)
	engfunc(EngFunc_SetSize, ent, Float:{-2.0,-2.0,0.0}, Float:{2.0,2.0,3.0})
	engfunc(EngFunc_SetModel, ent, "models/obj/bg_holo_light.mdl")
	set_pev(ent, pev_solid, SOLID_TRIGGER)
	set_pev(ent, pev_rendermode, kRenderTransAdd)
	set_pev(ent, pev_renderamt, 200.0)
	set_pev(ent, pev_framerate, 1.0)
	set_pev(ent, pev_sequence, 0)
	set_pev(ent, pev_scale, 0.05)
	set_pev(ent, pev_animtime, get_gametime())
	set_pev(ent, pev_movetype, MOVETYPE_TOSS)
	drop_to_floor(ent)
	
	set_pev(ent, pev_nextthink, get_gametime() + 0.01)
}

public p90_obj_think(ent)
{
	new id = pev(ent, pev_owner)
	if(!pev_valid(ent)) return
	if(!is_user_alive(id)) return
	
	if(touched_p90[id]) touched_p90[id] = false

	set_pev(ent, pev_nextthink, get_gametime() + 0.01)
}
public m3_obj_think(ent)
{
	new id = pev(ent, pev_owner)
	if(!pev_valid(ent)) return
	if(!is_user_alive(id)) return
	
	if(touched_m3[id]) touched_m3[id] = false

	set_pev(ent, pev_nextthink, get_gametime() + 0.01)
}
public xm1014_obj_think(ent)
{
	new id = pev(ent, pev_owner)
	if(!pev_valid(ent)) return
	if(!is_user_alive(id)) return
	
	if(touched_xm1014[id]) touched_xm1014[id] = false

	set_pev(ent, pev_nextthink, get_gametime() + 0.01)
}
public usp_obj_think(ent)
{
	new id = pev(ent, pev_owner)
	if(!pev_valid(ent)) return
	if(!is_user_alive(id)) return
	
	if(touched_usp[id]) touched_usp[id] = false

	set_pev(ent, pev_nextthink, get_gametime() + 0.01)
}
public hammer_obj_think(ent)
{
	new id = pev(ent, pev_owner)
	if(!pev_valid(ent)) return
	if(!is_user_alive(id)) return
	
	if(touched_hammer[id]) touched_hammer[id] = false

	set_pev(ent, pev_nextthink, get_gametime() + 0.01)
}
public knife_obj_think(ent)
{
	new id = pev(ent, pev_owner)
	if(!pev_valid(ent)) return
	if(!is_user_alive(id)) return
	
	if(touched_knife[id]) touched_knife[id] = false

	set_pev(ent, pev_nextthink, get_gametime() + 0.01)
}
public player_touch_that_knife(ent, id)
{
	if(!pev_valid(ent)) return
	if(!is_user_alive(id)) return
	
	if(!touched_knife[id]) touched_knife[id] = true
	get_bgknife(id)
	get_hammer[id] = 0
	client_cmd(id, "spk %s", "items/gunpickup2.wav")
	
	engfunc(EngFunc_RemoveEntity, ent)
}
public player_touch_that_hammer(ent, id)
{
	if(!pev_valid(ent)) return
	if(!is_user_alive(id)) return
	
	if(!touched_hammer[id]) touched_hammer[id] = true
	get_bghammer(id)
	create_entity_knife(id)
	server_cmd("objrmv")
	client_cmd(id, "spk %s", "items/gunpickup2.wav")
	set_dhudmessage(0,255, 0, -1.0, 0.13, 0, 0.0, 3.0)
	show_dhudmessage(id, "Soy : Good Enough! it's a little beat up!, but this hammer can break the window.")
	engfunc(EngFunc_RemoveEntity, ent)
}
public player_touch_that_p90(ent, id)
{
	if(!pev_valid(ent)) return
	if(!is_user_alive(id)) return
	
	if(!touched_p90[id]) touched_p90[id] = true
	get_p90(id)
	client_cmd(id, "spk %s", "items/gunpickup2.wav")
	engfunc(EngFunc_RemoveEntity, ent)
}
public player_touch_that_usp(ent, id)
{
	if(!pev_valid(ent)) return
	if(!is_user_alive(id)) return
	
	if(!touched_usp[id]) touched_usp[id] = true
	get_usp45(id)
	client_cmd(id, "spk %s", "items/gunpickup2.wav")
	engfunc(EngFunc_RemoveEntity, ent)
}
public player_touch_that_m3(ent, id)
{
	if(!pev_valid(ent)) return
	if(!is_user_alive(id)) return
	
	if(!touched_m3[id]) touched_m3[id] = true
	get_m3sg(id)
	client_cmd(id, "spk %s", "items/gunpickup2.wav")
	engfunc(EngFunc_RemoveEntity, ent)
}
public player_touch_that_xm1014(ent, id)
{
	if(!pev_valid(ent)) return
	if(!is_user_alive(id)) return
	
	if(!touched_xm1014[id]) touched_xm1014[id] = true
	get_xm1014sg(id)
	client_cmd(id, "spk %s", "items/gunpickup2.wav")
	engfunc(EngFunc_RemoveEntity, ent)
}
//stock
stock Set_WeaponAnim(id, anim)
{
	set_pev(id, pev_weaponanim, anim)
	
	message_begin(MSG_ONE_UNRELIABLE, SVC_WEAPONANIM, {0, 0, 0}, id)
	write_byte(anim)
	write_byte(pev(id, pev_body))
	message_end()
}
stock Stock_Drop_Slot(id, iSlot) 
{
	new weapons[32], num = 0
	get_user_weapons(id, weapons, num)
	
	for(new i = 0; i < num; i++)
	{
		new slot = Stock_Get_Wpn_Slot(weapons[i])

		if(iSlot == slot)
		{
			static wname[32]
			get_weaponname(weapons[i], wname, charsmax(wname))
			engclient_cmd(id, "drop", wname)
		}
	}
}

stock Stock_Get_Wpn_Slot(iWpn)
{
	const PRIMARY_WEAPONS_BIT_SUM = (1<<CSW_SCOUT)|(1<<CSW_XM1014)|(1<<CSW_MAC10)|(1<<CSW_AUG)|(1<<CSW_UMP45)|(1<<CSW_SG550)|(1<<CSW_GALIL)|(1<<CSW_FAMAS)|(1<<CSW_AWP)|(1<<CSW_MP5NAVY)|(1<<CSW_M249)|(1<<CSW_M3)|(1<<CSW_M4A1)|(1<<CSW_TMP)|(1<<CSW_G3SG1)|(1<<CSW_SG552)|(1<<CSW_AK47)|(1<<CSW_P90)
	const SECONDARY_WEAPONS_BIT_SUM = (1<<CSW_P228)|(1<<CSW_ELITE)|(1<<CSW_FIVESEVEN)|(1<<CSW_USP)|(1<<CSW_GLOCK18)|(1<<CSW_DEAGLE)

	if(PRIMARY_WEAPONS_BIT_SUM & (1<<iWpn)) return 1
	else if(SECONDARY_WEAPONS_BIT_SUM & (1<<iWpn)) return 2
	else if(iWpn == CSW_KNIFE) return 3
	else if(iWpn == CSW_HEGRENADE) return 4
	else if(iWpn == CSW_C4) return 5
	return 6 //FLASHBANG SMOKEBANG
}
